- include: hiera.yml

- name: Generate config files
  template:
    src: rabbitmq-env.conf.j2
    dest: /tmp/rabbitmq-env.conf

- name: Generate config files
  template:
    src: rabbitmq.config.j2
    dest: /tmp/rabbitmq.config

- name: Read configs into memory
  slurp:
    src: "/tmp/rabbitmq.config"
  register: "rabbitmq_config"

- name: Read configs into memory
  slurp:
    src: "/tmp/rabbitmq-env.conf"
  register: "rabbitmq_env_conf"

- name: Create rabbitmq configmaps
  ignore_errors: yes
  k8s_v1_config_map:
    name: rabbitmq
    namespace: '{{ namespace }}'
    state: present
    labels:
      service: rabbitmq
    data:
      config.json: |
        {
            "command": "/usr/sbin/rabbitmq-server",
            "config_files": [
                {
                    "source": "/var/lib/kolla/config_files/rabbitmq-env.conf",
                    "dest": "/etc/rabbitmq/rabbitmq-env.conf",
                    "owner": "rabbitmq",
                    "perm": "0600"
                },
                {
                    "source": "/var/lib/kolla/config_files/rabbitmq.config",
                    "dest": "/etc/rabbitmq/rabbitmq.config",
                    "owner": "rabbitmq",
                    "perm": "0600"
                }
            ],
            "permissions": [
                {
                    "path": "/var/lib/rabbitmq",
                    "owner": "rabbitmq:rabbitmq",
                    "recurse": true
                },
                {
                    "path": "/var/log/kolla/rabbitmq",
                    "owner": "rabbitmq:rabbitmq",
                    "recurse": true
                }
            ]
        }

      rabbitmq.config: |
        {{rabbitmq_config['content'] | b64decode}}

      rabbitmq-env.conf: |
        {{rabbitmq_env_conf['content'] | b64decode}}

- name: create rabbitmq service
  k8s_v1_service:
    host: "{{coe_host}}"
    context: "{{kube_context}}"
    kubeconfig: "{{config_file}}"
    name: rabbitmq
#    cluster_ip: "None"  # Currently broken for headless svc
    namespace: '{{ namespace }}'
    debug: yes
    labels:
      app: rabbitmq
      service: rabbitmq
    selector:
      app: rabbitmq
      service: rabbitmq
    ports:
      - port: 4369
        name: epmd
      - port: 5672
        name: amqp
      - port: 25672
        name: comm
  register: create-svc

- name: create rabbitmq management service
  k8s_v1_service:
    host: "{{coe_host}}"
    context: "{{kube_context}}"
    kubeconfig: "{{config_file}}"
    name: rabbitmq-mgmt
    namespace: '{{ namespace }}'
    labels:
      app: rabbitmq
      service: rabbitmq
    selector:
      app: rabbitmq
      service: rabbitmq
    ports:
      - name: rabbitmq-mgmt
        port: 15672

- name: create rabbitmq statefulset
  k8s_v1beta1_stateful_set:
    host: "{{coe_host}}"
    context: "{{kube_context}}"
    kubeconfig: "{{config_file}}"
    name: rabbitmq
    namespace: '{{ namespace }}'
    state: present
    spec_service_name: rabbitmq
    spec_template_metadata_name: rabbitmq
    replicas: '{{ replicas }}'
    service_account_name: openstack
    spec_template_metadata_labels:
      app: rabbitmq
      service: rabbitmq
    containers:
    - name: rabbitmq
      image: tripleoupstream/centos-binary-rabbitmq:latest
      env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
      ports:
        - container_port: 5672
          name: rabbitmq
        - containerPort: 15672
          name: rabbitmq-mgmt
      volume_mounts:
        - name: kolla-config
          mountPath: /var/lib/kolla/config_files/
    volumes:
      - name: kolla-config
        config_map:
          name: rabbitmq
